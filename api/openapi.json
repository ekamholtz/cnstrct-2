{
  "openapi": "3.0.0",
  "info": {
    "title": "CNSTRCT API MCP Server",
    "description": "CNSTRCT API for integrating with QuickBooks Online for transactions, expenses, and invoices",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    }
  ],
  "schemas": {
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error message"
        }
      }
    },
    "Invoice": {
      "type": "object",
      "description": "QuickBooks Invoice object"
    },
    "Purchase": {
      "type": "object",
      "description": "QuickBooks Purchase/Expense object"
    },
    "Vendor": {
      "type": "object",
      "description": "QuickBooks Vendor object"
    },
    "Report": {
      "type": "object",
      "description": "QuickBooks Report data"
    },
    "Attachment": {
      "type": "object",
      "description": "QuickBooks Attachment object"
    },
    "SyncResponse": {
      "type": "object",
      "properties": {
        "invoices": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Invoice"
          }
        },
        "expenses": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Purchase"
          }
        },
        "payments": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "bills": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "vendors": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Vendor"
          }
        },
        "customers": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    }
  },
  "paths": {
    "/qbo/initiateAuth": {
      "get": {
        "summary": "Get the authorization URI",
        "description": "Returns the QuickBooks authorization URI for OAuth2 flow",
        "responses": {
          "200": {
            "description": "Authorization URI",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authUri": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/qbo/callback": {
      "get": {
        "summary": "OAuth callback",
        "description": "Callback endpoint for OAuth2 flow",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Authorization code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "State parameter",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "realmId",
            "in": "query",
            "description": "QuickBooks Company ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OAuth token response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "token": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/qbo/retrieveToken": {
      "get": {
        "summary": "Retrieve current OAuth token",
        "description": "Returns the current OAuth token",
        "responses": {
          "200": {
            "description": "OAuth token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "No token found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/qbo/refreshAccessToken": {
      "get": {
        "summary": "Refresh OAuth access token",
        "description": "Refreshes the OAuth access token",
        "responses": {
          "200": {
            "description": "Refreshed OAuth token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/company": {
      "get": {
        "summary": "Get company information",
        "description": "Returns information about the QuickBooks company",
        "responses": {
          "200": {
            "description": "Company information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts": {
      "get": {
        "summary": "Get all accounts",
        "description": "Returns a list of QuickBooks accounts",
        "parameters": [
          {
            "name": "AccountType",
            "in": "query",
            "description": "Filter by account type",
            "schema": {
              "type": "string",
              "enum": [
                "Bank",
                "Other Current Asset",
                "Fixed Asset",
                "Other Asset",
                "Accounts Receivable",
                "Equity",
                "Expense",
                "Other Expense",
                "Income",
                "Other Income",
                "Cost of Goods Sold",
                "Accounts Payable",
                "Credit Card",
                "Long Term Liability",
                "Other Current Liability"
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records to return",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of records to skip",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fetchAll",
            "in": "query",
            "description": "Fetch all records",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new account",
        "description": "Creates a new QuickBooks account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Name",
                  "AccountType"
                ],
                "properties": {
                  "Name": {
                    "type": "string",
                    "description": "Account name"
                  },
                  "AccountType": {
                    "type": "string",
                    "description": "Type of account",
                    "enum": [
                      "Bank",
                      "Other Current Asset",
                      "Fixed Asset",
                      "Other Asset",
                      "Accounts Receivable",
                      "Equity",
                      "Expense",
                      "Other Expense",
                      "Income",
                      "Other Income",
                      "Cost of Goods Sold",
                      "Accounts Payable",
                      "Credit Card",
                      "Long Term Liability",
                      "Other Current Liability"
                    ]
                  },
                  "AccountSubType": {
                    "type": "string",
                    "description": "Account sub-type"
                  },
                  "Description": {
                    "type": "string",
                    "description": "Account description"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/{id}": {
      "get": {
        "summary": "Get a specific account",
        "description": "Returns a specific QuickBooks account by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Account ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an account",
        "description": "Updates a specific QuickBooks account by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Account ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string",
                    "description": "Account name"
                  },
                  "Description": {
                    "type": "string",
                    "description": "Account description"
                  },
                  "Active": {
                    "type": "boolean",
                    "description": "Whether the account is active"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/customers/{id}": {
      "get": {
        "summary": "Get a specific customer",
        "description": "Returns a specific QuickBooks customer by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a customer",
        "description": "Updates an existing QuickBooks customer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Customer data to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/customers": {
        "post": {
          "summary": "Create a new customer",
          "description": "Creates a new QuickBooks customer",
          "requestBody": {
            "description": "Customer data",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created customer",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "get": {
          "summary": "Get all customers",
          "description": "Returns a list of QuickBooks customers",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "Number of records to return",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Number of records to skip",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fetchAll",
              "in": "query",
              "description": "Fetch all records",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of customers",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/invoices": {
        "get": {
          "summary": "Get all invoices",
          "description": "Returns a list of QuickBooks invoices",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "Number of records to return",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Number of records to skip",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fetchAll",
              "in": "query",
              "description": "Fetch all records",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of invoices",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new invoice",
          "description": "Creates a new QuickBooks invoice",
          "requestBody": {
            "description": "Invoice data",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created invoice",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/invoices/{id}": {
        "get": {
          "summary": "Get a specific invoice",
          "description": "Returns a specific QuickBooks invoice by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Invoice ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Invoice details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update an invoice",
          "description": "Updates an existing QuickBooks invoice",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Invoice ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Invoice data to update",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Updated invoice",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/invoices/{id}/send": {
        "post": {
          "summary": "Send an invoice",
          "description": "Sends a QuickBooks invoice to the customer via email",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Invoice ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Email information",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "description": "Email address to send the invoice to"
                    }
                  },
                  "required": [
                    "email"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Result of sending the invoice",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/expenses": {
        "get": {
          "summary": "Get all expenses",
          "description": "Returns a list of QuickBooks expenses (purchases)",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "Number of records to return",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Number of records to skip",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "fetchAll",
              "in": "query",
              "description": "Fetch all records",
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of expenses",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new expense",
          "description": "Creates a new QuickBooks expense (purchase)",
          "requestBody": {
            "description": "Expense data",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Created expense",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/expenses/{id}": {
        "get": {
          "summary": "Get a specific expense",
          "description": "Returns a specific QuickBooks expense (purchase) by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Expense ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Expense details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update an expense",
          "description": "Updates an existing QuickBooks expense (purchase)",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Expense ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Expense data to update",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Updated expense",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "summary": "Get all invoices",
        "description": "Retrieves a list of invoices based on query parameters",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "object"
            },
            "description": "Query parameters for filtering invoices"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of invoices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new invoice",
        "description": "Creates a new invoice in QuickBooks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}": {
      "get": {
        "summary": "Get a specific invoice",
        "description": "Retrieves a specific invoice by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Invoice ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an invoice",
        "description": "Updates an existing invoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Invoice ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/send": {
      "post": {
        "summary": "Send an invoice",
        "description": "Sends an invoice to the specified email",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Invoice ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address to send the invoice to"
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Result of sending invoice",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/expenses": {
      "get": {
        "summary": "Get all expenses",
        "description": "Retrieves a list of expenses/purchases",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "object"
            },
            "description": "Query parameters for filtering expenses"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of expenses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Purchase"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new expense",
        "description": "Creates a new expense/purchase in QuickBooks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Purchase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/{id}": {
      "get": {
        "summary": "Get a specific expense",
        "description": "Retrieves a specific expense/purchase by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Expense ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Expense details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an expense",
        "description": "Updates an existing expense/purchase",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Expense ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Purchase"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Purchase"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vendors": {
      "get": {
        "summary": "Get all vendors",
        "description": "Retrieves a list of vendors",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "schema": {
              "type": "object"
            },
            "description": "Query parameters for filtering vendors"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of vendors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vendor"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new vendor",
        "description": "Creates a new vendor in QuickBooks",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vendor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created vendor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/vendors/{id}": {
      "get": {
        "summary": "Get a specific vendor",
        "description": "Retrieves a specific vendor by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vendor ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Vendor details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a vendor",
        "description": "Updates an existing vendor",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Vendor ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vendor"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated vendor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "summary": "Get all transactions within a date range",
        "description": "Retrieves all transactions within the specified date range using Change Data Capture",
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for the transaction range"
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for the transaction range"
          }
        ],
        "responses": {
          "200": {
            "description": "List of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Missing required parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sync/invoices": {
      "get": {
        "summary": "Sync invoices within a date range",
        "description": "Retrieves all invoices within the specified date range",
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for the invoice range"
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for the invoice range"
          }
        ],
        "responses": {
          "200": {
            "description": "List of invoices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Invoice"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sync/expenses": {
      "get": {
        "summary": "Sync expenses within a date range",
        "description": "Retrieves all expenses within the specified date range",
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for the expense range"
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for the expense range"
          }
        ],
        "responses": {
          "200": {
            "description": "List of expenses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Purchase"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing required parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/sync/full": {
      "get": {
        "summary": "Full sync of multiple entity types",
        "description": "Synchronizes multiple entity types (invoices, expenses, payments, bills, vendors, customers) in one request",
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for the sync range"
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for the sync range"
          }
        ],
        "responses": {
          "200": {
            "description": "Synchronized data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyncResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing required parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/profit-loss": {
      "get": {
        "summary": "Profit and Loss report",
        "description": "Retrieves a Profit and Loss report for the specified date range and departments",
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for the report"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for the report"
          },
          {
            "in": "query",
            "name": "departments",
            "schema": {
              "type": "string"
            },
            "description": "Department(s) to filter the report by"
          }
        ],
        "responses": {
          "200": {
            "description": "Profit and Loss report",
            "content": {
              "application/json": {
                
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                
              }
            }
          }
        }
      }
    },
    "/reports/balance-sheet": {
      "get": {
        "summary": "Balance Sheet report",
        "description": "Retrieves a Balance Sheet report for the specified date and departments",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date for the balance sheet"
          },
          {
            "in": "query",
            "name": "departments",
            "schema": {
              "type": "string"
            },
            "description": "Department(s) to filter the report by"
          }
        ],
        "responses": {
          "200": {
            "description": "Balance Sheet report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/ar-aging": {
      "get": {
        "summary": "Accounts Receivable Aging report",
        "description": "Retrieves an Accounts Receivable Aging report for the specified date",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Date for the AR aging report"
          }
        ],
        "responses": {
          "200": {
            "description": "AR Aging report",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/reports/ap-aging": {
      "get": {
        "summary": "Get Accounts Payable Aging Report",
        "description": "Retrieves the Accounts Payable Aging report for a specified date.",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Report date (YYYY-MM-DD). Optional."
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts Payable Aging report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/attachments/upload": {
      "post": {
        "summary": "Upload Attachment",
        "description": "Uploads an attachment to a QuickBooks entity.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "entityType": {
                    "type": "string"
                  },
                  "entityId": {
                    "type": "string"
                  },
                  "fileName": {
                    "type": "string"
                  },
                  "filePath": {
                    "type": "string"
                  },
                  "contentType": {
                    "type": "string"
                  }
                },
                "required": [
                  "entityType",
                  "entityId",
                  "fileName",
                  "filePath",
                  "contentType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Attachment uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Missing required parameters"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/attachments/{entityType}/{entityId}": {
      "get": {
        "summary": "Get Attachments for Entity",
        "description": "Retrieves attachments for a given entity type and ID.",
        "parameters": [
          {
            "in": "path",
            "name": "entityType",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Entity type (e.g., Invoice, Bill)"
          },
          {
            "in": "path",
            "name": "entityId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Entity ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of attachments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/webhook/quickbooks": {
      "post": {
        "summary": "QuickBooks Webhook Handler",
        "description": "Endpoint for receiving and processing QuickBooks webhook events.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook received"
          }
        }
      }
    }
  }
}